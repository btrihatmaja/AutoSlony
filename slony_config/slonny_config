#!/bin/bash
#--
# define the namespace the replication system uses in our example it is
# slony_example
#--

echo "cluster name = $CLUSTERNAME;"

#--
# admin conninfo's are used by slonik to connect to the nodes one for each
# node on each side of the cluster, the syntax is that of PQconnectdb in
# the C-API
# --

echo "node 1 admin conninfo = 'dbname=$MASTERDBNAME host=$MASTERHOST user=$REPLICATIONUSER password=$REPLICATIONPASSWORD';"
echo "node 2 admin conninfo = 'dbname=$SLAVEDBNAME host=$SLAVEHOST user=$REPLICATIONUSER password=$REPLICATIONPASSWORD';"

#--
# init the first node.  Its id MUST be 1.  This creates the schema
# _$CLUSTERNAME containing all replication system specific database
# objects.
#--

echo "init cluster ( id=1, comment = 'Master Node');"

#--
# Slony-I organizes tables into sets. The smallest unit a node can
# subscribe is a set. The following commands create one set containing
# all 4 pgbench tables. The master or origin of the set is node 1.
#--

echo "create set (id=1, origin=1, comment='All pgbench tables');"
echo "set add table (set id=1, tables = '$SCHEMANAME.*', comment='table');"
echo "set add sequence (set id=1, sequences = '$SCHEMANAME.*', comment='sequence');"

#--
# Create the second node (the slave) tell the 2 nodes how to connect to
# each other and how they should listen for events.
#--

echo "store node (id=2, comment = 'Slave node', event node=1);"
echo "store path (server = 1, client = 2, conninfo='dbname=$MASTERDBNAME host=$MASTERHOST user=$REPLICATIONUSER password=$REPLICATIONPASSWORD');"
echo "store path (server = 2, client = 1, conninfo='dbname=$SLAVEDBNAME host=$SLAVEHOST user=$REPLICATIONUSER password=$REPLICATIONPASSWORD');"
